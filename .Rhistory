sqrt(var(smokers)/length(smokers))
t.test(nonsmokers,smokers,alternative="greater",var.equal=T)
scores = c(nonsmokers,smokers)
groups = c("nonsmokers","smokers")
groups = rep(groups,c(10,10))
mj.data = data.frame(groups,scores)
mj.data
boxplot(DF1,DF1,ylab="Scores on Digit Span Task",
names=c("nonsmokers","smokers"),
main="Digit Span Performance by\n Smoking Status")
boxplot(DF1,DF2,ylab="Scores on Digit Span Task",
names=c("Average-weight","Overweight"),
main="Digit Span Performance by\n Smoking Status")
boxplot(DF1,DF2,ylab="Time",
names=c("Average-weight","Overweight"),
main="Time spent with\n Patients")
sqrt(var(DF1)/length(DF1))
sqrt(var(DF2)/length(DF2))
sqrt(var(DF1)/length(DF1))
sqrt(var(DF2)/length(DF2))
t.test(DF1,DF2,alternative="greater",var.equal=T)
library(xlsx)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course X - Project"){
setwd(workDirStr)
}
Init()
DF <- read.xlsx("./data/MediterraneanDietHealth.xlsx", sheetIndex=1, header = TRUE)
DF <- as.data.frame(DF)
DF
DF <- read.xlsx("./data/MediterraneanDietHealth.xlsx", sheetIndex=1, header = TRUE)
DF <- as.data.frame(DF)
DF
DF <- DF[, 1:6]
DF
DF <- read.xlsx("./data/MediterraneanDietHealth.xlsx", sheetIndex=1, header = TRUE)
DF <- as.data.frame(DF)
DF <- DF[, 1:6]
DF
DF <- read.xlsx("./data/MediterraneanDietHealth.xlsx", sheetIndex=1, header = TRUE)
DF <- as.data.frame(DF)
DF <- DF[, 1:6]
DF
DF1 <- DF[DF[, "Type"] == "A",]
DF1
DF1 <- DF[DF[, "Type"] == "AHA",]
DF1
Sum3 <- DF1$Cancers
Sum3
Sum3 <- DF1$Cancers + DF1$Deaths + DF1$Nonfatalillness
Sum3
sum3 <- DF1$Cancers + DF1$Deaths + DF1$Nonfatalillness
sum3
result <- sum3/DF1$Total
result
result <- (sum3/DF1$Total)*100
result
result <- (sum3/DF1$Total)*100
round(result, digits = 0)
DF1 <- DF[DF[, "Type"] == "AHA",]
sum3 <- DF1$Cancers + DF1$Deaths + DF1$Nonfatalillness
result1 <- (sum3/DF1$Total)*100
round(result1, digits = 0)
DF2 <- DF[DF[, "Type"] == "Mediterranean",]
sum3 <- DF2$Cancers + DF2$Deaths + DF2$Nonfatalillness
result2 <- (sum3/DF2$Total)*100
round(result2, digits = 0)
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_1")
#runApp()
runApp()
shinyapps::configureApp("DataProducts_ShinyApp", size="xlarge ")
data(anorexia)
library(MASS)
data(anorexia)
anorexia
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Family.Therapy", "CBT"))
anorexia
library(MASS)
data(anorexia)
library(ggplot2)
library(shiny)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2"){
setwd(workDirStr)
}
Init()
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Familytherapy", "CBT"))
sf <- as.data.frame(anorexia)
sf
library(shiny)
library(datasets)
library(MASS)
data(anorexia)
library(ggplot2)
library(shiny)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2"){
setwd(workDirStr)
}
Init()
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Familytherapy", "CBT"))
sf <- as.data.frame(anorexia)
# sf <- subset(sf, select = c(Hair,Eye, Freq, Gender))
shinyServer(function(input, output) {
# Fill in the spot we created for a plot
output$txPlot <- renderPlot({
if(input$Treat == "Control") {
sf <- sf[sf[, "Treat"] == "Control",]
} else if (input$Treat == "CBT") {
sf <- sf[sf[, "Treat"] == "CBT",]
} else {
sf <- sf[sf[, "Treat"] == "Familytherapy",]
}
hist(sf$Prewt, sf$Postwt,
main=input$Treat,
col = "blue",
ylab="?",
xlab="? \n ???")
})
})
library(shiny)
# Define the overall UI
shinyUI(
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("title here"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("Treat", "Select Treatment:",
choices= c("Control", "CBT", "Familytherapy")),
hr(),
helpText("test hos")
),
# Create a spot for the barplot
mainPanel(
plotOutput("txPlot")
)
)
)
)
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_1")
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
anorexia
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
veg <- c('Prewt','Postwt')
veg
values <- c('Prewt','Postwt')
values
library(shiny)
library(datasets)
library(MASS)
data(anorexia)
library(ggplot2)
library(shiny)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2"){
setwd(workDirStr)
}
Init()
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Familytherapy", "CBT"))
sf <- as.data.frame(anorexia)
# sf <- subset(sf, select = c(Hair,Eye, Freq, Gender))
values <- c('Prewt','Postwt')
shinyServer(function(input, output) {
# Fill in the spot we created for a plot
output$txPlot <- renderPlot({
if(input$Treat == "Control") {
sf <- sf[sf[, "Treat"] == "Control",]
} else if (input$Treat == "CBT") {
sf <- sf[sf[, "Treat"] == "CBT",]
} else {
sf <- sf[sf[, "Treat"] == "Familytherapy",]
}
combi <- rbind(sf$Prewt, sf$Postwt)
ggplot(combi, aes(length, fill = values)) + geom_density(alpha = 0.2)
#                 hist(combi,
#                      main=input$Treat,
#                      col = "blue",
#                      ylab="?",
#                      xlab="? \n ???")
})
})
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
sf <- anorexia
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
combi <- rbind(sf$Prewt, sf$Postwt)
combi
x  <- seq(-2, 2, 0.05)
y1 <- pnorm(x)
y2 <- pnorm(x,1,1)
plot( x, y1, type="l", col="red" )
par(new=TRUE)
plot( x, y2, type="l", col="green" )
x  <- seq(-2, 2, 0.05)
x
y1 <- pnorm(x)
y1
plot( sf, Prewt, type="l", col="red" )
par(new=TRUE)
plot( sf, Postwt, type="l", col="green" )
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
anorexia
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
library(shiny)
library(datasets)
library(MASS)
data(anorexia)
library(ggplot2)
library(shiny)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2"){
setwd(workDirStr)
}
Init()
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Familytherapy", "CBT"))
sf <- as.data.frame(anorexia)
# sf <- subset(sf, select = c(Hair,Eye, Freq, Gender))
values <- c('Prewt','Postwt')
shinyServer(function(input, output) {
# Fill in the spot we created for a plot
output$txPlot <- renderPlot({
if(input$Treat == "Control") {
sf <- sf[sf[, "Treat"] == "Control",]
} else if (input$Treat == "CBT") {
sf <- sf[sf[, "Treat"] == "CBT",]
} else {
sf <- sf[sf[, "Treat"] == "Familytherapy",]
}
plot( sf, sf$Prewt, type="l", col="red" )
par(new=TRUE)
plot( sf, sf$Postwt, type="l", col="green" )
#                combi <- rbind(sf$Prewt, sf$Postwt)
#                 ggplot(combi, aes(length, fill = values)) # + geom_density(alpha = 0.2)
#                 hist(combi,
#                      main=input$Treat,
#                      col = "blue",
#                      ylab="?",
#                      xlab="? \n ???")
#
})
})
plot( sf, sf$Prewt, type="l", col="red" )
par(new=TRUE)
plot( sf, sf$Postwt, type="l", col="green" )
library(shiny)
library(datasets)
library(MASS)
data(anorexia)
library(ggplot2)
library(shiny)
Init <- function(workDirStr="C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2"){
setwd(workDirStr)
}
Init()
anorexia$Treat <-ifelse(anorexia$Treat == "Cont", "Control",
ifelse(anorexia$Treat == "FT", "Familytherapy", "CBT"))
sf <- as.data.frame(anorexia)
sf
sf <- sf[sf[, "Treat"] == "Control",]
plot( sf, sf$Prewt, type="l", col="red" )
sf
sf$Prewt
plot( sf$Prewt, type="l", col="red" )
x  <- seq(-2, 2, 0.05)
y1 <- pnorm(x)
y2 <- pnorm(x,1,1)
df <- data.frame(x,y1,y2)
require(ggplot2)
ggplot(df, aes(x)) +                    # basic graphical object
geom_line(aes(y=y1), colour="red") +  # first layer
geom_line(aes(y=y2), colour="green")  # second layer
require(ggplot2)
require(reshape)
df <- data.frame(time = 1:10,
a = cumsum(rnorm(10)),
b = cumsum(rnorm(10)),
c = cumsum(rnorm(10)))
df <- melt(df ,  id = 'time', variable_name = 'series')
df <- data.frame(time = 1:10,
a = cumsum(rnorm(10)),
b = cumsum(rnorm(10)),
c = cumsum(rnorm(10)))
df
?melt
ggplot(df, aes(time,value))
ggplot(df, aes(time,value)) + geom_line()
install.packages("reshape")
library(reshape)
df <- data.frame(time = 1:10,
a = cumsum(rnorm(10)),
b = cumsum(rnorm(10)),
c = cumsum(rnorm(10)))
df
df <- melt(df ,  id = 'time', variable_name = 'series')
df
ggplot(df, aes(time,value)) + geom_line() + facet_grid(series ~ .)
anorexia
sf <- sf[sf[, "Treat"] == "Control",]
plot( sf$Prewt, type="l", col="red" )
plot( sf, sf$Postwt, type="l", col="green" )
plot( sf$Postwt, type="l", col="green" )
plot( sf$Prewt, type="l", col="red" )
plot( sf$Prewt, type="l", col="red" )
par(new=TRUE)
plot( sf$Postwt, type="l", col="green" )
sf
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
runApp()
?plot
runApp()
runApp()
runApp()
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
#runApp()
deployApp()
library(shinyapps)
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_3")
runApp()
deployApp()
deployApp()
deployApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_2")
deployApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp")
deployApp()
runApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp")
runApp()
#### DeployApp to shinyApp
library(shinyapps)
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp")
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
runApp()
library(shinyapps)
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
runApp()
deployApp()
#install.packages("vcd")
library(grid)
library(vcd)
data(SexualFun)
#install.packages("ggplot2")
library(ggplot2)
library(shiny)
sf <- as.data.frame(SexualFun)
sf$Gender <- NA
sf$Gender <- c("Wife","Husband")
shinyServer(function(input, output) {
# Fill in the spot we created for a plot
output$txPlot <- renderPlot({
if(input$Gender == "Wife") {
qplot(Wife, data=sf, weight=Freq) + facet_grid(facets=.~Husband, labeller="label_both")
} else {
qplot(Husband, data=sf, weight=Freq) + facet_grid(facets=.~Wife, labeller="label_both")
}
})
})
library(shiny)
# library(grid)
# library(vcd)
# data(SexualFun)
# Define the overall UI
shinyUI(
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Summary of ex is fun for me and my partner"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("Gender", "Select Gender:",
choices= c("Wife", "Husband")),
helpText("The following table given by Hout et al. (1987) summarizes respons
es to the questionnaire item “Sex is fun for me and my partner (a) never or occasio
nally, (b) fairly often, (c) very often, (d) almost always,” for 91 married couples f
rom the Tucson metropolitan area"),
hr(),
helpText("Source: http://msor.victoria.ac.nz/foswiki/pub/Courses/STAT292_2014T1/WebHome/n9.pdf")
),
# Create a spot for the barplot
mainPanel(
plotOutput("txPlot")
)
)
)
)
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
library(shiny)
# library(grid)
# library(vcd)
# data(SexualFun)
# Define the overall UI
shinyUI(
# Use a fluid Bootstrap layout
fluidPage(
# Give the page a title
titlePanel("Summary of ex is fun for me and my partner"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("Gender", "Select Gender:",
choices= c("Wife", "Husband")),
helpText("The following table summarizes responses to the questionnaire item Sex is fun for me and my partner (a) never or occasio
nally, (b) fairly often, (c) very often, (d) almost always,” for 91 married couples"),
hr(),
helpText("Source: http://msor.victoria.ac.nz/foswiki/pub/Courses/STAT292_2014T1/WebHome/n9.pdf")
),
# Create a spot for the barplot
mainPanel(
plotOutput("txPlot")
)
)
)
)
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
#### DeployApp to shinyApp
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
deployApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
library(shinyapps)
# steps:
# 1- Set the folder as working directory
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
#### DeployApp to shinyApp
library(shinyapps)
setwd("C:/Users/hsofoian/Desktop/DataScience/Course 9 - Developing Data Products/Week 3 - Project/DataProducts_ShinyApp_Final")
deployApp()
